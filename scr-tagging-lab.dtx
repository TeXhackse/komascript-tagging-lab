% \iffalse meta-comment
%
%% File: scr-taggging-lab.dtx
%
%<*driver>
\documentclass[USenglish]{koma-script-source-doc}
\EnableCrossrefs
\CodelineIndex
\begin{document}
  \DocInput{scr-tagging-lab.dtx}
\end{document}
%</driver>
%
% \fi
%
%    \begin{macrocode}
%<@@=scrlab>
%<*testphase>
\ProvidesExplFile{KOMA-fixes-latex-lab-testphase.ltx}{2024-09-14}{v0.1}{KOMA-fixes testphase}
\RequirePackage{scr-tagging-lab}
%</testphase>
%<*package|koma>
%    \end{macrocode}
% \section{Implementation}
%    \begin{macrocode}
\ProvidesExplPackage {scr-tagging-lab} {2024-06-30} {0.18}{KOMA-Script tagging experiments}
%    \end{macrocode}
% As this project is constructed to be integrated into KOMA-Script, we define some macros which are also defined by KOMA-Script itself.
% We use file hooks to do save the meaning before loading the class and restore it afterwards.
% This is to simplify moving the changes from this experiment to the official KOMA-Script SVN.
% Some hooks belong to a package to work without a KOMA-class. As they do for tocbasic
%
% Move the redefinitions after the tocbasic package
%    \begin{macrocode}
\hook_gput_code:nnn {package/tocbasic/after}{scr-tagging-lab}{
	\cs_set_eq:cN {\string\TOCLineLeaderFill} \_@@_TOCLineLeaderFill
	\cs_set_eq:cN {\string\usetocbasicnumberline} \_@@_usetocbasicnumberline
	\cs_set_eq:NN \scr@dte@tocline \_@@_scr@dte@tocline
	\cs_set_eq:NN \scr@numberline \_@@_scr@numberline
}
%    \end{macrocode}
% Insted of redefining \cs{scr@startsection} it's possible to use hooks.
% The public interface |sec-start| is enforcing a |Sect| tag.
% As the formal structure in my opinion differs I decided to use the internals to use the Part-Tag instead.
% The mechanism inside the latex-lab is already aware just the public interface is not (yet).
%    \begin{macrocode}
\cs_new:Nn \_@@_sec_start_aux:n {
	\tl_if_eq:nnTF {#1} {part} {
		\bool_if:NT\l__tag_sec_Sect_bool
			{
				\__tag_sec_end:n   {-1}
				\__tag_sec_begin:nn{-1}{tag=Part}
			}
		\tl_set:Nn\l__tag_para_tag_tl{part}
	} {
		\tag_tool:n {sec-start=#1}
	}
}
%    \end{macrocode}
% As the content of scrkernel-sections.dtx is overwriting the orignal definition of \cs{@sect} and some other macros.
% This change has to be adjusted to match the kernel changes of the testphase.
% The Following code has been taken from scrkernel-sections.dtx by Markus Kohm.
% Changes have been marked
%    \begin{macrocode}
%</package|koma>
%    \end{macrocode}
% Because the KOMA hooks don't have additional arguments it's necessary to use hooks with arguments on the surrounding macro to save the title.
% Maybe it's easier to pass those with changing the hooks, but this needs to be discussed.
%    \begin{macrocode}
%<*package|heading-hooks>
\hook_gput_code:nnn {cmd/partformat/before}{scr-tagging-lab} {
 \SuspendTagging{partformat}%
}
\hook_gput_code:nnn {cmd/partformat/after}{scr-tagging-lab}{
 \ResumeTagging{partformat}%
}

\cs_new:Nn \_@@_patch_sectioning: {
	\cs_set_eq:NN \sectionlinesformat \scrlab@sectionlinesformat
	\cs_set_eq:NN \chapterlinesformat \scrlab@chapterlinesformat
	\cs_set_eq:NN \chapterformat \scrlab@chapterformat
	\cs_set_eq:NN \chapterlineswithprefixformat \scrlab@chapterlineswithprefixformat
	% PART?
	%\cs_set_eq:NN partlineswithprefixformat \scrlab@chapterlinesformat
	\cs_set_eq:NN \partformat \scrlab@partformat
	\cs_set_eq:NN \@seccntformat \scrlab@seccntformat
	\let\@sect\scrlab@sect
	\let\@xsect\scrlab@xsect

	\AddtoDoHook{heading/begingroup}{\tagtool{para-flattened=true}\use_none:n}
%    \end{macrocode}
% probably it's a good idea to define a hook with arguments there instead of this workaround
%    \begin{macrocode}
%	\AddtoDoHook{heading/begingroup/chapter}{
%		\exp_args:Ne  \tag_tool:n { sec-start=chapter}%=  \exp_not:V \l_@@_current_heading_tl  }
%		\Ifnumbered{chapter} \relax {\MakeLinkTarget[chapter]}%
%	}
%	\AddtoDoHook{heading/endgroup/chapter}{
%	   \tag_tool:n {sec-stop-chapter}
%	}
%	\AddtoDoHook{heading/begingroup/part}{
	%	\exp_args:Ne  \tag_tool:n { sec-start-part=  \exp_not:V \l_@@_current_heading_tl  }
%		\Ifnumbered{part} \relax {\MakeLinkTarget[part]}
%	}
%	\AddtoDoHook{heading/endgroup/part}{
%	   \tag_tool:n {sec-stop-part}
%	}
	\AddtoDoHook{heading/branch/star}{\_@@_sec_start_aux:n}
	\AddtoDoHook{heading/branch/nostar}{\_@@_sec_start_aux:n}
}

\cs_new:Nn \_@@_patch_maketitle: {
	\cs_gset_eq:cN {\string\maketitle} \_@@_maketitle
	\cs_gset_eq:NN \@maketitle \_@@_@maketitle
}
%    \end{macrocode}
% we probably also should add those hooks after scrextend. But first the classes should work properly.
%    \begin{macrocode}
\hook_gput_code:nnn {class/scrartcl/after} {scr-tagging-lab} {
	\_@@_patch_sectioning:
	\_@@_patch_maketitle:
	\let\numberline\scr@numberline
}
\hook_gput_code:nnn {class/scrbook/after} {scr-tagging-lab} {
	\_@@_patch_sectioning:
	\_@@_patch_maketitle:
	\let\numberline\scr@numberline
}
\hook_gput_code:nnn {class/scrreprt/after} {scr-tagging-lab} {
	\_@@_patch_sectioning:
	\_@@_patch_maketitle:
	\let\numberline\scr@numberline
}
%    \end{macrocode}
% Workaround to avoid extra warnings
%    \begin{macrocode}
\AtEndOfPackage{
	\let\@startsection\scr@saved@startsection
	\cs_undefine:N \scr@saved@startsection
}
%    \end{macrocode}
% \begin{macro}{\scrlab@section@target}
% \changes{tagging}{2024/09/15}{Adapt our own \cs{@hyp@section@target@nnn}  as  \cs{\scrlab@section@target}}
% tagging: Hyperref has some internal command \cs{@hyp@section@target@nnn} to move the anchor in case the indent in front of the section heading is negative.
% We copy this command to adjust the anchor in the same way.
% The definition is taken from the \pkg{latex-lab-sec}.dtx.
%    \begin{macrocode}
%% This definition was adapted from
%% latex-lab-sec.dtx
%% Copyright 2021-2023 LaTeX Project
\cs_new_protected:Npn \scrlab@section@target #1 #2 #3 %#1 optarg #2 name/counter, #3 indent
  {
    \makebox[0pt][l]
     {
       \skip_set:Nn \@tempskipa {#3}
       \dim_compare:nNnF {\@tempskipa}<{0pt}{\kern-\@tempskipa}
         \MakeLinkTarget#1{#2}
     }
  }
%    \end{macrocode}
% \end{macro}^^A \scrlab@section@target
%</package|heading-hooks>
%    \end{macrocode}
